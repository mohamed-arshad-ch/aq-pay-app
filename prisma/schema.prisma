datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String              @id @default(cuid())
  accountHolderName String
  accountNumber     String
  ifscCode          String
  userId            String
  user              User                @relation(fields: [userId], references: [id])
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  WalletTransaction WalletTransaction[]

  @@index([userId])
}

model User {
  id                 String              @id @default(cuid())
  email              String              @unique
  username           String              @unique
  password           String
  firstName          String
  lastName           String
  emailVerified      Boolean             @default(false)
  verifyToken        String?             @unique
  verifyTokenExpires DateTime?
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  accounts           Account[]
  wallet             Wallet?
  transactions       WalletTransaction[]
}

model Wallet {
  id           String              @id @default(cuid())
  userId       String              @unique
  user         User                @relation(fields: [userId], references: [id])
  balance      Float               @default(0)
  currency     String              @default("USD")
  createdAt    DateTime            @default(now())
  updatedAt    DateTime            @updatedAt
  transactions WalletTransaction[]

  @@index([userId])
}

model WalletTransaction {
  id            String   @id @default(cuid())
  orderId       String   @unique
  walletId      String
  wallet        Wallet   @relation(fields: [walletId], references: [id])
  userId        String
  user          User     @relation(fields: [userId], references: [id])
  amount        Float
  currency      String
  type          String   // DEPOSIT, WITHDRAWAL
  status        String   // PENDING, PROCESSING, COMPLETED, FAILED
  description   String?
  fee           Float    @default(0)
  bankAccountId String?
  bankAccount   Account? @relation(fields: [bankAccountId], references: [id])
  date          DateTime @default(now())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  location      String?
  transactionId String?

  @@index([walletId])
  @@index([userId])
  @@index([bankAccountId])
  @@index([orderId])
}
